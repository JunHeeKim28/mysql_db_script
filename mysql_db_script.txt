#!/bin/sh

LANG=C
export LANG


#################################################################################
# 변수 설정
#################################################################################
AP_STR="MySQL"

HOST_NAME=`hostname`

RESULT_FILE=$HOST_NAME"_"$AP_STR".txt"

> $RESULT_FILE

echo "***************************************************************************"				>>  $RESULT_FILE 2>&1
echo "*                                                                         *"				>>  $RESULT_FILE 2>&1
echo "*            Pre_My-SQL 8.0 CCE(Common Configuration Enumeration) Check   *"				>>  $RESULT_FILE 2>&1
echo "*            Version : 1.0                                                *"				>>  $RESULT_FILE 2>&1
echo "*            Copyright : JUNHEE                                           *"				>>  $RESULT_FILE 2>&1
echo "*                                                                         *"				>>  $RESULT_FILE 2>&1
echo "***************************************************************************"				>>  $RESULT_FILE 2>&1
echo " "													>>  $RESULT_FILE 2>&1
echo ""
echo ""
echo "################# Mysql 점검 스크립트를 실행하겠습니다 ###################"
echo ""
echo ""

alias ls=ls
alias grep=/bin/grep

#echo "  My-SQL 실행파일 경로를 입력해주세요."
#while true
#do 
#   echo -n "    (ex. source 설치 시 설치디렉터리/bin/mysql 또는 rpm의 경우 /usr/bin/mysql 입력) : " 
#   read mysql
#   if [ $mysql ]
#      then
#         if [ -f $mysql ]
#            then 
#				break
#            else
#				echo "입력하신 디렉토리가 존재하지 않습니다. 다시 입력해주세요."
#				echo ""
#         fi
#    else
#         echo "잘못 입력하셨습니다. 다시 입력해주세요."
#         echo ""
#   fi
#done
#
#echo "My-SQL 설정파일 경로를 입력해주세요."
#while true
#do 
#   echo -n "    (ex. 기본 설정파일을 사용 할 경우 /etc/mysql/my.cnf 입력, 이름을 변경해서 사용하는 경우 해당 설정파일의 절대경로 입력) : " 
#   read mysql_cnf
#   if [ $mysql_cnf ]
#      then
#         if [ -f $mysql_cnf ]
#            then 
#				break
#            else
#				echo "입력하신 환경설정 파일이 존재하지 않습니다. 다시 입력해주세요."
#				echo ""
#         fi
#    else
#         echo "잘못 입력하셨습니다. 다시 입력해주세요."
#         echo ""
#   fi
#done

echo ""
echo "Mysql root계정 패스워드가 설정이 되어 있는 경우                 1 "
echo "Mysql root계정 패스워드가 NULL로 설정이 되어 있는 경우          2 "
read my_pwd

echo "관리자 계정에 부여된 IP를 입력해 주세요. (예. localhost 또는 127.0.0.1)"
read my_ip

echo "트리거를 점검할 데이터베이스 이름을 입력하세요."
read trigger_db
if [ $my_pwd = "1" ]
	then
		echo ""
		echo '[Mysql 구동 계정]'
		echo -n "    (ex. root/123456) : " 
		read idpwd
		id=`echo $idpwd|awk -F'/' '{print $1}'`
		pwd2=`echo $idpwd|awk -F'/' '{print $2}'`
		
		echo "" >> $RESULT_FILE 2>&1
		echo "=====================================계정 관리=====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-01] 기본계정 외 추가계정 사용여부 확인" >> $RESULT_FILE 2>&1
		USER_COUNT=$(mysql -h $my_ip -u $id -p$pwd2 -e "select count(*) from mysql.user where user not in ('root','mysql.sys','debian-sys-maint','mysql.session','mysql.infoschema');" -s -N)
		if [ "$USER_COUNT" -gt 0 ]; 
			then
				echo "[D-01] 양호" >> $RESULT_FILE 2>&1
			else 
				echo "[D-01] 취약" >> $RESULT_FILE 2>&1
		fi
#
		echo "[D-02] 비밀번호 설정 여부" >> $RESULT_FILE 2>&1
		PASS_EMPTY=$(mysql -h $my_ip -u $id -p$pwd2 -e "select count(*) from mysql.user where authentication_string='';" -s -N)
		if [ "$PASS_EMPTY" -gt 0 ];
			then
				echo "[D-02] 취약" >> $RESULT_FILE 2>&1
			else 
				echo "[D-02] 양호" >> $RESULT_FILE 2>&1
		fi
#
		echo "[D-03] 비밀번호 규칙성 설정" >> $RESULT_FILE 2>&1
		LENGTH=$(mysql -h $my_ip -u $id -p$pwd2 -e "show variables like 'validate_password_length';" -s -N | awk '{print $2}')
		MIXED=$(mysql -h $my_ip -u $id -p$pwd2 -e "show variables like 'validate_password_mixed_case_count';" -s -N | awk '{print $2}')
		NUMBER=$(mysql -h $my_ip -u $id -p$pwd2 -e "show variables like 'validate_password_number_count';" -s -N | awk '{print $2}')
		if [ "$LENGTH" -ge 8 ] && [ "$MIXED" -ge 1 ] && [ "$NUMBER" -ge 1 ]];
			then
				echo "[D-03] 양호" >> $RESULT_FILE 2>&1
			else
				echo "[D-03] 취약" >> $RESULT_FILE 2>&1
		fi
#
		echo "[D-04] 비밀번호 만료기간 설정" >> $RESULT_FILE 2>&1
		PASS_LIFETIME=$(mysql -h $my_ip -u $id -p$pwd2 -e "show variables like 'default_password_lifetime';" -t | awk '{print $2}')
		if [ -n "$PASS_LIFETIME" ] && echo "$PASS_LIFETIME" | grep -qE '^[0-9]+$'; 
			then
    				if [ "$PASS_LIFETIME" -gt 0 ] && [ "$PASS_LIFETIME" -le 60 ]; 
    					then
        					echo "[D-04] 양호" >> $RESULT_FILE 2>&1
    					else
        					echo "[D-04] 취약" >> $RESULT_FILE 2>&1
    				fi
			else
    				echo "[D-04] 취약" >> $RESULT_FILE 2>&1
		fi
#
		echo "[D-05] 데이터베이스의 불필요 계정을 제거" >> $RESULT_FILE 2>&1
		echo "[D-05] 수동" >> $RESULT_FILE 2>&1
		echo "양호: 계정 정보를 확인하여 불필요한 계정이 없는 경우" >> $RESULT_FILE 2>&1
		echo "취약: 인가되지 않은 계정, 퇴직자 계정, 테스트 계정 등 불필요한 계정이 존재하는 경우" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -p$pwd2 -e "select user, host from mysql.user;" -t >> $RESULT_FILE 2>&1
#
		echo "" >> $RESULT_FILE 2>&1
		echo "=====================================권한 관리=====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-06] 데이터베이스 관리자 권한을 꼭 필요한 계정 및 그룹에 허용" >> $RESULT_FILE 2>&1
		echo "[D-06] 수동" >> $RESULT_FILE 2>&1
		echo "양호 : 관리자 권한이 필요한 계정 및 그룹에만 관리자 권한이 부여된 경우" >> $RESULT_FILE 2>&1
		echo "취약 : 관리자 권한이 필요 없는 계정 및 그룹에 권한이 부여된 경우" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -p$pwd2 -e "select user,host, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Grant_priv, Super_priv, Create_tmp_table_priv, Create_view_priv, Show_view_priv from mysql.user;" -t >> $RESULT_FILE 2>&1
#
		echo "[D-07] 인가되지 않은 GRANT OPTION 사용 제한" >> $RESULT_FILE 2>&1
		echo "[D-07] 수동" >> $RESULT_FILE 2>&1
		echo "양호 : WITH_GRANT_OPTION이 ROLE에 의하여 설정되어 있는 경우" >> $RESULT_FILE 2>&1
		echo "취약 : WITH_GRANT_OPTION이 ROLE에 의하여 설정되어있지 않은 경우" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -p$pwd2 -e "select user, grant_priv from mysql.user;" -t >> $RESULT_FILE 2>&1
#
		echo "" >> $RESULT_FILE 2>&1
		echo "=====================================접근 통제=====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-08] 원격에서 DB 서버로의 접속 제한" >> $RESULT_FILE 2>&1
		echo "[D-08] 수동" >> $RESULT_FILE 2>&1
		echo "양호: DB서버에 지정된 IP주소에서만 접근 가능하도록 제한한 경우" >> $RESULT_FILE 2>&1
		echo "취약: DB서버에 지정된 IP주소에서만 접근 가능하도록 제한하지 않은 경우(ex. host가 '%'인 필드 존재)" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -p$pwd2 -e "select user,host from mysql.user;" -t >> $RESULT_FILE 2>&1
#
		echo "[D-09] DBA 이외의 인가되지 않은 사용자가 시스템 테이블에 접근할 수 없도록 설정" >> $RESULT_FILE 2>&1
		echo "[D-09] 수동" >> $RESULT_FILE 2>&1
		echo "양호 : 시스템 테이블이 DBA만 접근 가능하도록 설정되어 있는 경우" >> $RESULT_FILE 2>&1
		echo "취약 : 시스템 테이블이 DBA 외 일반 사용자 계정이 접근 가능하도록 설정되어 있는 경우" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -p$pwd2 -e "select user, host from mysql.user where Select_priv = 'Y';" -t >> $RESULT_FILE 2>&1
#
		echo "" >> $RESULT_FILE 2>&1
		echo "====================================패치 / 로그====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-10] 데이터베이스에 대해 최신 보안패치 적용" >> $RESULT_FILE 2>&1
		echo "[D-10] 수동" >> $RESULT_FILE 2>&1
		echo "양호 : 정책에 따른 버전별 최신 패치를 적용" >> $RESULT_FILE 2>&1
		echo "취약 : 정책에 따른 버전별 최신 패치를 적용하지 않음" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -p$pwd2 -e "select version();" -t >> $RESULT_FILE 2>&1
#
		echo "[D-11] 데이터베이스에 대해 로그 활성화" >> $RESULT_FILE 2>&1
		LOG_ERROR_STATUS=$(mysql -h $my_ip -u $id -p$pwd2 -e "show variables like 'log_error';" -s -N | awk '{print $2}')
		GENERAL_LOG_STATUS=$(mysql -h $my_ip -u $id -p$pwd2 -e "show variables like 'general_log';" -s -N | awk '{print $2}')
		SLOW_QUERY_LOG_STATUS=$(mysql -h $my_ip -u $id -p$pwd2 -e "show variables like 'slow_query_log';" -s -N | awk '{print $2}')
		LOG_BIN_STATUS=$(mysql -h $my_ip -u $id -p$pwd2 -e "show variables like 'log_bin';" -s -N | awk '{print $2}')
		if [ "$LOG_ERROR_STATUS" != "" ] && [ "$GENERAL_LOG_STATUS" = "ON" ] && [ "$SLOW_QUERY_LOG_STATUS" = "ON" ] && [ "$LOG_BIN_STATUS" = "ON" ];
			then
				echo "[D-11] 양호" >> $RESULT_FILE 2>&1
			else
				echo "[D-11] 취약" >> $RESULT_FILE 2>&1
		fi
#
		echo "" >> $RESULT_FILE 2>&1
		echo "====================================백업 / 복구====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-12] 데이터베이스에 대해 레플리케이션 활성화" >> $RESULT_FILE 2>&1
		REPLICA_STATUS=$(mysql -h $my_ip -u $id -p$pwd2 -e "show master status \g" -s -N | awk '{print $3}')
		if [ -n "$REPLICA_STATUS" ];
			then
				echo "[D-12] 양호" >> $RESULT_FILE 2>&1
			else
				echo "[D-12] 취약" >> $RESULT_FILE 2>&1
		fi
		echo "[D-13] 데이터베이스에 대해 트리거 활성화" >> $RESULT_FILE 2>&1
		TRIGGER_STATUS=$(mysql -h $my_ip -u $id -p$pwd2 -D $trigger_db -e "show triggers;")
		if [ -n "$TRIGGER_STATUS" ];
			then
				echo "[D-13] 양호" >> $RESULT_FILE 2>&1
			else
				echo "[D-13] 취약" >> $RESULT_FILE 2>&1
		fi
		echo "End" >> $RESULT_FILE 2>&1
		
#################################################################################################################################################

		echo  "======================================================================================"  >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1		
		echo "End" >> $RESULT_FILE 2>&1
		
	else
		echo ""
		echo '[Mysql 구동 계정]'
		echo -n "    (ex. root) : " 
		read id
		
		echo "" >> $RESULT_FILE 2>&1
		echo "=====================================계정 관리=====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-01] 기본계정 외 추가계정 사용여부 확인" >> $RESULT_FILE 2>&1
		USER_COUNT=$(mysql -h $my_ip -u $id -e "select count(*) from mysql.user where user not in ('root','mysql.sys','debian-sys-maint','mysql.session','mysql.infoschema');" -s -N)
		if [ "$USER_COUNT" -gt 0 ]; 
			then
				echo "[D-01] 양호" >> $RESULT_FILE 2>&1
			else 
				echo "[D-01] 취약" >> $RESULT_FILE 2>&1
		fi
#
		echo "[D-02] 비밀번호 설정 여부" >> $RESULT_FILE 2>&1
		PASS_EMPTY=$(mysql -h $my_ip -u $id -e "select count(*) from mysql.user where authentication_string='';" -s -N)
		if [ "$PASS_EMPTY" -gt 0 ];
			then
				echo "[D-02] 취약" >> $RESULT_FILE 2>&1
			else 
				echo "[D-02] 양호" >> $RESULT_FILE 2>&1
		fi
#
		echo "[D-03] 비밀번호 규칙성 설정" >> $RESULT_FILE 2>&1
		LENGTH=$(mysql -h $my_ip -u $id -e "show variables like 'validate_password_length';" -s -N | awk '{print $2}')
		MIXED=$(mysql -h $my_ip -u $id -e "show variables like 'validate_password_mixed_case_count';" -s -N | awk '{print $2}')
		NUMBER=$(mysql -h $my_ip -u $id -e "show variables like 'validate_password_number_count';" -s -N | awk '{print $2}')
		if [ "$LENGTH" -ge 8 ] && [ "$MIXED" -ge 1 ] && [ "$NUMBER" -ge 1 ];
			then
				echo "[D-03] 양호" >> $RESULT_FILE 2>&1
			else
				echo "[D-03] 취약" >> $RESULT_FILE 2>&1
		fi
#
		echo "[D-04] 비밀번호 만료기간 설정" >> $RESULT_FILE 2>&1
		PASS_LIFETIME=$(mysql -h $my_ip -u $id -e "show variables like 'default_password_lifetime';" -t | awk '{print $2}')
		if [ -n "$PASS_LIFETIME" ] && echo "$PASS_LIFETIME" | grep -qE '^[0-9]+$'; 
			then
    				if [ "$PASS_LIFETIME" -gt 0 ] && [ "$PASS_LIFETIME" -le 60 ]; 
    					then
        					echo "[D-04] 양호" >> $RESULT_FILE 2>&1
    					else
        					echo "[D-04] 취약" >> $RESULT_FILE 2>&1
    				fi
			else
    				echo "[D-04] 취약" >> $RESULT_FILE 2>&1
		fi
#
		echo "[D-05] 데이터베이스의 불필요 계정을 제거" >> $RESULT_FILE 2>&1
		echo "[D-05] 수동" >> $RESULT_FILE 2>&1
		echo "양호: 계정 정보를 확인하여 불필요한 계정이 없는 경우" >> $RESULT_FILE 2>&1
		echo "취약: 인가되지 않은 계정, 퇴직자 계정, 테스트 계정 등 불필요한 계정이 존재하는 경우" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -e "select user, host from mysql.user;" -t >> $RESULT_FILE 2>&1
#
		echo "" >> $RESULT_FILE 2>&1
		echo "=====================================권한 관리=====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-06] 데이터베이스 관리자 권한을 꼭 필요한 계정 및 그룹에 허용" >> $RESULT_FILE 2>&1
		echo "[D-06] 수동" >> $RESULT_FILE 2>&1
		echo "양호 : 관리자 권한이 필요한 계정 및 그룹에만 관리자 권한이 부여된 경우" >> $RESULT_FILE 2>&1
		echo "취약 : 관리자 권한이 필요 없는 계정 및 그룹에 권한이 부여된 경우" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -e "select user,host, Select_priv, Insert_priv, Update_priv, Delete_priv, Create_priv, Drop_priv, Grant_priv, Super_priv, Create_tmp_table_priv, Create_view_priv, Show_view_priv from mysql.user;" -t >> $RESULT_FILE 2>&1
#
		echo "[D-07] 인가되지 않은 GRANT OPTION 사용 제한" >> $RESULT_FILE 2>&1
		echo "[D-07] 수동" >> $RESULT_FILE 2>&1
		echo "양호 : WITH_GRANT_OPTION이 ROLE에 의하여 설정되어 있는 경우" >> $RESULT_FILE 2>&1
		echo "취약 : WITH_GRANT_OPTION이 ROLE에 의하여 설정되어있지 않은 경우" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -e "select user, grant_priv from mysql.user;" -t >> $RESULT_FILE 2>&1
#
		echo "" >> $RESULT_FILE 2>&1
		echo "=====================================접근 통제=====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-08] 원격에서 DB 서버로의 접속 제한" >> $RESULT_FILE 2>&1
		echo "[D-08] 수동" >> $RESULT_FILE 2>&1
		echo "양호: DB서버에 지정된 IP주소에서만 접근 가능하도록 제한한 경우" >> $RESULT_FILE 2>&1
		echo "취약: DB서버에 지정된 IP주소에서만 접근 가능하도록 제한하지 않은 경우(ex. host가 '%'인 필드 존재)" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -e "select user,host from mysql.user;" -t >> $RESULT_FILE 2>&1
#
		echo "[D-09] DBA 이외의 인가되지 않은 사용자가 시스템 테이블에 접근할 수 없도록 설정" >> $RESULT_FILE 2>&1
		echo "[D-09] 수동" >> $RESULT_FILE 2>&1
		echo "양호 : 시스템 테이블이 DBA만 접근 가능하도록 설정되어 있는 경우" >> $RESULT_FILE 2>&1
		echo "취약 : 시스템 테이블이 DBA 외 일반 사용자 계정이 접근 가능하도록 설정되어 있는 경우" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -e "select user, host from mysql.user where Select_priv = 'Y';" -t >> $RESULT_FILE 2>&1
#
		echo "" >> $RESULT_FILE 2>&1
		echo "====================================패치 / 로그====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-10] 데이터베이스에 대해 최신 보안패치 적용" >> $RESULT_FILE 2>&1
		echo "[D-10] 수동" >> $RESULT_FILE 2>&1
		echo "양호 : 정책에 따른 버전별 최신 패치를 적용" >> $RESULT_FILE 2>&1
		echo "취약 : 정책에 따른 버전별 최신 패치를 적용하지 않음" >> $RESULT_FILE 2>&1
		mysql -h $my_ip -u $id -e "select version();" -t >> $RESULT_FILE 2>&1
#
		echo "[D-11] 데이터베이스에 대해 로그 활성화" >> $RESULT_FILE 2>&1
		LOG_ERROR_STATUS=$(mysql -h $my_ip -u $id -e "show variables like 'log_error';" -s -N | awk '{print $2}')
		GENERAL_LOG_STATUS=$(mysql -h $my_ip -u $id -e "show variables like 'general_log';" -s -N | awk '{print $2}')
		SLOW_QUERY_LOG_STATUS=$(mysql -h $my_ip -u $id -e "show variables like 'slow_query_log';" -s -N | awk '{print $2}')
		LOG_BIN_STATUS=$(mysql -h $my_ip -u $id -e "show variables like 'log_bin';" -s -N | awk '{print $2}')
		if [ "$LOG_ERROR_STATUS" != "" ] && [ "$GENERAL_LOG_STATUS" = "ON" ] && [ "$SLOW_QUERY_LOG_STATUS" = "ON" ] && [ "$LOG_BIN_STATUS" = "ON" ];
			then
				echo "[D-11] 양호" >> $RESULT_FILE 2>&1
			else
				echo "[D-11] 취약" >> $RESULT_FILE 2>&1
		fi
#
		echo "" >> $RESULT_FILE 2>&1
		echo "====================================백업 / 복구====================================" >> $RESULT_FILE 2>&1
		echo "" >> $RESULT_FILE 2>&1
		echo "[D-12] 데이터베이스에 대해 레플리케이션 활성화" >> $RESULT_FILE 2>&1
		REPLICA_STATUS=$(mysql -h $my_ip -u $id -e "show master status \g" -s -N | awk '{print $3}')
		if [ -n "$REPLICA_STATUS" ];
			then
				echo "[D-12] 양호" >> $RESULT_FILE 2>&1
			else
				echo "[D-12] 취약" >> $RESULT_FILE 2>&1
		fi
		echo "[D-13] 데이터베이스에 대해 트리거 활성화" >> $RESULT_FILE 2>&1
		TRIGGER_STATUS=$(mysql -h $my_ip -u $id -D $trigger_db -e "show triggers;")
		if [ -n "$TRIGGER_STATUS" ];
			then
				echo "[D-13] 양호" >> $RESULT_FILE 2>&1
			else
				echo "[D-13] 취약" >> $RESULT_FILE 2>&1
		fi
		echo "End" >> $RESULT_FILE 2>&1
fi
